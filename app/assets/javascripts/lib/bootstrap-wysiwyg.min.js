(function (b) {
    var a = function (e) {
        var c = b.Deferred(), d = new FileReader();
        d.onload = function (f) {
            c.resolve(f.target.result)
        };
        d.onerror = c.reject;
        d.onprogress = c.notify;
        d.readAsDataURL(e);
        return c.promise()
    };
    b.fn.cleanHtml = function () {
        var c = b(this).html();
        return c && c.replace(/(<br>|\s|<div><br><\/div>|&nbsp;)*$/, "")
    };
    b.fn.wysiwyg = function (k) {
        var l = this, h, q, d, p = function () {
            if (q.activeToolbarClass) {
                b(q.toolbarSelector).find(d).each(function () {
                    try {
                        var s = b(this).data(q.commandRole);
                        if (document.queryCommandState(s)) {
                            b(this).addClass(q.activeToolbarClass)
                        } else {
                            b(this).removeClass(q.activeToolbarClass)
                        }
                    } catch (r) {
                    }
                })
            }
        }, getImgUrl = function (r) {
            var token = l.attr("data-token");
            var bucket = l.attr("data-BUCKET");
            var Qiniu_UploadUrl = "http://up.qiniu.com";
            var Qiniu_upload = function (f, token) {
                var xhr = new XMLHttpRequest();
                xhr.open('POST', Qiniu_UploadUrl, true);
                var formData, startDate;
                formData = new FormData();
                formData.append('token', token);
                formData.append('file', f);
                xhr.onreadystatechange = function (response) {
                    if (xhr.readyState == 4 && xhr.status == 200 && xhr.responseText != "") {
                        var blkRet = JSON.parse(xhr.responseText);
                        var imgUrl = 'http://' + bucket + '.dajiaxiao.cn/' + blkRet.key;
                        document.execCommand("insertimage", 0, imgUrl);
                    } else if (xhr.status != 200 && xhr.responseText) {

                    }
                };
                startDate = new Date().getTime();
                xhr.send(formData);
            };
            if (r.length > 0 && token != "") {
                Qiniu_upload(r[0], token);
            } else {
                // console && console.log("错了");
            }
        }, o = function (r, s) {
            var u = r.split(" "), v = u.shift(), t = u.join(" ") + (s || "");
            l.focus();
            switch (r) {
                case "insertTel":
                    t = '<a href="tel:'+t+'">'+t+'</a>';
                    document.execCommand("insertHTML", 0, t);
                    break;
                case "insertTable":
                    if (t.indexOf(",") >= 0) {
                        t = t.split(",");
                    } else {
                        t = [1, 1];
                    }
                    var trn = t[0];
                    var tdn = t[1];
                    var $thead = "";
                    var $tbody = "";
                    $thead += '<tr>';
                    for (var i = 0; i < tdn; i++) {
                        $thead += '<td> </td>';
                    }
                    $thead += '</tr>';
                    for (var i = 0; i < trn ; i++) {
                        if (i % 2 == 0) {
                            $tbody += "<tr style='color: #707070;background-color: #f2f2f2;background-repeat: repeat-x; height: 34px'>";
                        }
                        else {
                            $tbody += "<tr style='color: #707070;background-color: #f9f9f9;background-repeat: repeat-x;height: 34px'>";

                        }
                        for (var j = 0; j < tdn; j++) {
                            $tbody += "<td style='border-bottom-width: 2px;border: 1px solid #ddd;padding: 8px;line-height: 1.428571429;vertical-align: top;'> </td>";
                        }
                        $tbody += "</tr>";
                    }
                    var $table = '<table class="table-down" style="border:1px solid #ddd;width: 100%;margin-bottom: 20px">' +

                        '<tbody>' + $tbody + '</tbody>' +
                        '</table>';
                    document.execCommand("insertHTML", 0, $table);
                    break;
                case "insertVideo":
                    var $video="";
                    if(t.indexOf('v.qq.com')>=0){
                        var id=t.substring(t.indexOf("vid=")+4, t.indexOf("&ptag"));
                        $video='<iframe width="280" height="250" src="http://v.qq.com/iframe/player.html?vid='+id+'&width=280&height=250&auto=0"></iframe>';
                    }else if(t.indexOf("v.youku.com")>=0){
                        var id=t.substring(t.indexOf("id_")+3, t.indexOf(".html"));
                        $video='<div><iframe height=250 width=280 src="http://player.youku.com/embed/'+id+'" frameborder=0 allowfullscreen></iframe><br></div><div></div>';
                    }
                    document.execCommand("insertHTML", 0, $video);
                    break;
                case "insertAudio":
                    var $audio = '<div><audio src="' + t + '" controls="controls"></audio><br></div><div></div>';
                    document.execCommand("insertHTML", 0, $audio);
                    break;
                default:
                    document.execCommand(v, 0, t);
                    break;
            }
            p();
        }, f = function (r) {
            b.each(r, function (s, t) {
                l.keydown(s, function (u) {
                    if (l.attr("contenteditable") && l.is(":visible")) {
                        u.preventDefault();
                        u.stopPropagation();
                        o(t)
                    }
                }).keyup(s, function (u) {
                    if (l.attr("contenteditable") && l.is(":visible")) {
                        u.preventDefault();
                        u.stopPropagation()
                    }
                })
            })
        }, g = function () {
            try {
                var r = window.getSelection();
                if (r.getRangeAt && r.rangeCount) {
                    return r.getRangeAt(0)
                }
            } catch (s) {
            }
        }, i = function () {
            h = g()
        }, e = function () {
            try {
                var s = window.getSelection();
                if (h) {
                    try {
                        s.removeAllRanges()
                    } catch (r) {
                        document.body.createTextRange().select();
                        document.selection.empty()
                    }
                    s.addRange(h)
                }
            } catch (t) {
            }
        }, j = function (r) {
            l.focus();
            getImgUrl(r);
//            b.each(r, function (s, t) {
//                if (/^image\//.test(t.type)) {
//                    b.when(a(t)).done(function (u) {
//                        o("insertimage", u);
//                    }).fail(function (u) {
//                        q.fileUploadError("file-reader", u)
//                    })
//                } else {
//                    q.fileUploadError("unsupported-file-type", t.type)
//                }
//            });
        }, c = function (s, r) {
            e();
            if (document.queryCommandSupported("hiliteColor")) {
                document.execCommand("hiliteColor", 0, r || "transparent")
            }
            i();
            s.data(q.selectionMarker, r)
        }, m = function (s, r) {
            s.find(d).click(function () {
                e();
                l.focus();
                o(b(this).data(r.commandRole));
                i()
            });
            s.find("[data-toggle=dropdown]").click(e);
            s.find("input[type=text][data-" + r.commandRole + "]").on("webkitspeechchange change", function () {
                var t = this.value;
                this.value = "";
                e();
                if (t) {
                    l.focus();
                    o(b(this).data(r.commandRole), t)
                }
                i()
            }).on("focus", function () {
                var t = b(this);
                if (!t.data(r.selectionMarker)) {
                    c(t, r.selectionColor);
                    t.focus()
                }
            }).on("blur", function () {
                var t = b(this);
                if (t.data(r.selectionMarker)) {
                    c(t, false)
                }
            });
            s.find("input[type=file][data-" + r.commandRole + "]").change(function () {
                e();
                if (this.type === "file" && this.files && this.files.length > 0) {
                    j(this.files)
                }
                i();
                this.value = ""
            })
        }, n = function () {
            l.on("dragenter dragover", false).on("drop", function (s) {
                var r = s.originalEvent.dataTransfer;
                s.stopPropagation();
                s.preventDefault();
                if (r && r.files && r.files.length > 0) {
                    j(r.files)
                }
            })
        };
        q = b.extend({}, b.fn.wysiwyg.defaults, k);
        d = "a[data-" + q.commandRole + "],button[data-" + q.commandRole + "],input[type=button][data-" + q.commandRole + "]";
        f(q.hotKeys);
        if (q.dragAndDropImages) {
            n()
        }
        m(b(q.toolbarSelector), q);
        l.attr("contenteditable", true).on("mouseup keyup mouseout", function () {
            i();
            p()
        });
        b(window).bind("touchend", function (u) {
            var t = (l.is(u.target) || l.has(u.target).length > 0), s = g(), r = s && (s.startContainer === s.endContainer && s.startOffset === s.endOffset);
            if (!r || t) {
                i();
                p()
            }
        });
        return this
    };
    b.fn.wysiwyg.defaults = {hotKeys: {"ctrl+b meta+b": "bold", "ctrl+i meta+i": "italic", "ctrl+u meta+u": "underline", "ctrl+z meta+z": "undo", "ctrl+y meta+y meta+shift+z": "redo", "ctrl+l meta+l": "justifyleft", "ctrl+r meta+r": "justifyright", "ctrl+e meta+e": "justifycenter", "ctrl+j meta+j": "justifyfull", "shift+tab": "outdent", tab: "indent"}, toolbarSelector: "[data-role=editor-toolbar]", commandRole: "edit", activeToolbarClass: "btn-info", selectionMarker: "edit-focus-marker", selectionColor: "darkgrey", dragAndDropImages: true, fileUploadError: function (d, c) {
        // console.log("File upload error", d, c)
    }}
}(window.jQuery));
(function (a, b) {
    a.fn.ace_colorpicker = function (c) {
        var d = a.extend({pull_right: false, caret: true}, c);
        this.each(function () {
            var g = a(this);
            var e = "";
            var f = "";
            a(this).hide().find("option").each(function () {
                var h = "colorpick-btn";
                if (this.selected) {
                    h += " selected";
                    f = this.value
                }
                e += '<li><a class="' + h + '" href="#" style="background-color:' + this.value + ';" data-color="' + this.value + '"></a></li>'
            }).end().on("change.ace_inner_call", function () {
                a(this).next().find(".btn-colorpicker").css("background-color", this.value)
            }).after('<div class="dropdown dropdown-colorpicker"><a data-toggle="dropdown" class="dropdown-toggle" href="#"><span class="btn-colorpicker" style="background-color:' + f + '"></span></a><ul class="dropdown-menu' + (d.caret ? " dropdown-caret" : "") + (d.pull_right ? " pull-right" : "") + '">' + e + "</ul></div>").next().find(".dropdown-menu").on("click", function (j) {
                var h = a(j.target);
                if (!h.is(".colorpick-btn")) {
                    return false
                }
                h.closest("ul").find(".selected").removeClass("selected");
                h.addClass("selected");
                var i = h.data("color");
                g.val(i).change();
                j.preventDefault();
                return true
            })
        });
        return this
    }
})(window.jQuery);
(function (a, b) {
    a.fn.ace_wysiwyg = function (c, h) {
        var d = a.extend({speech_button: true, wysiwyg: {}}, c);
        var e = ["#ac725e", "#d06b64", "#f83a22", "#fa573c", "#ff7537", "#ffad46", "#42d692", "#16a765", "#7bd148", "#b3dc6c", "#fbe983", "#fad165", "#92e1c0", "#9fe1e7", "#9fc6e7", "#4986e7", "#9a9cff", "#b99aff", "#c2c2c2", "#cabdbf", "#cca6ac", "#f691b2", "#cd74e6", "#a47ae2", "#444444"];
        var g = {font: {values: ["Arial", "Courier", "Comic Sans MS", "Helvetica", "Open Sans", "Tahoma", "Verdana"], icon: "fa fa-font", title: "字体"}, fontSize: {values: {5: "5号", 4: "4号", 3: "3号", 2: "2号", 1: "1号"}, icon: "fa fa-text-height", title: "字体大小"}, bold: {icon: "fa fa-bold", title: "粗体字"}, italic: {icon: "fa fa-italic", title: "斜体字"}, strikethrough: {icon: "fa fa-strikethrough", title: "删除线"}, underline: {icon: "fa fa-underline", title: "下划线"}, insertunorderedlist: {icon: "fa fa-list-ul", title: "无序列表"}, insertorderedlist: {icon: "fa fa-list-ol", title: "有序列表"}, outdent: {icon: "fa fa-indent", title: "取消文字缩进"}, indent: {icon: "fa fa-outdent", title: "文字缩进"}, insertImage: {icon: "fa fa-picture-o", title: "插入图片", button_text: '<i class="fa fa-file"></i>选择图片 &hellip;', placeholder: "图片网址", button_insert: "插入", button_class: "btn-success", button_insert_class: "btn-primary", choose_file: true}, insertVideo: {icon: "fa fa-file-video-o", title: "插入视频", button_text: "插入", placeholder: "视频网址", button_class: "btn-primary"}, insertAudio: {icon: "fa fa-music", title: "插入音频", button_text: "插入", placeholder: "音频网址", button_class: "btn-primary"}, insertTel: {icon: "fa fa-phone", title: "插入电话号码", button_text: "插入", placeholder: "电话号码", button_class: "btn-primary"}, insertTable: {icon: "fa fa-th", title: "插入表格", button_text: "插入", placeholder: "行数，列数", button_class: "btn-primary"}, justifyleft: {icon: "fa fa-align-left", title: "左对齐"}, justifycenter: {icon: "fa fa-align-center", title: "居中对齐"}, justifyright: {icon: "fa fa-align-right", title: "右对齐"}, justifyfull: {icon: "fa fa-align-justify", title: "对齐"}, createLink: {icon: "fa fa-link", title: "添加超级链接", button_text: "添加", placeholder: "网址", button_class: "btn-primary"}, unlink: {icon: "fa fa-unlink", title: "移除超级链接"}, foreColor: {values: e, title: "选择文字颜色"}, backColor: {values: e, title: "选择背景颜色"}, undo: {icon: "fa fa-undo", title: "撤销"}, redo: {icon: "fa fa-repeat", title: "重做"}, viewSource: {icon: "fa fa-code", title: "查看源代码"}};
        var f = d.toolbar || ["font", null, "fontSize", null, "bold", "italic", "strikethrough", "underline", null, "insertunorderedlist", "insertorderedlist", "outdent", "indent", null, "justifyleft", "justifycenter", "justifyright", "justifyfull", null, "createLink", "unlink", null, "insertImage", "insertVideo", "insertAudio", "insertTel", "insertTable", null, "foreColor", null, "undo", "redo", null, "viewSource"];
        this.each(function () {
            var r = ' <div class="wysiwyg-toolbar btn-toolbar"> <div style="color:red;">提示：从word文档或网页中复制的内容，请先粘贴在一个空白的txt文档中，再粘贴到此文本框，否则容易造成格式错乱。</div> <div class="btn-group"> ';
            for (var n in f) {
                if (f.hasOwnProperty(n)) {
                    var p = f[n];
                    if (p === null) {
                        r += ' </div> <div class="btn-group"> ';
                        continue
                    }
                    if (typeof p == "string" && p in g) {
                        p = g[p];
                        p.name = f[n]
                    } else {
                        if (typeof p == "object" && p.name in g) {
                            p = a.extend(g[p.name], p)
                        } else {
                            continue
                        }
                    }
                    var q = "className" in p ? p.className : "";
                    switch (p.name) {
                        case"font":
                            r += ' <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i><i class="fa fa-angle-down fa-on-right"></i></a> ';
                            r += ' <ul class="dropdown-menu dropdown-light">';
                            for (var j in p.values) {
                                if (p.values.hasOwnProperty(j)) {
                                    r += ' <li><a data-edit="fontName ' + p.values[j] + '" style="font-family:\'' + p.values[j] + "'\">" + p.values[j] + "</a></li> "
                                }
                            }
                            r += " </ul>";
                            break;
                        case"fontSize":
                            r += ' <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i>&nbsp;<i class="fa fa-angle-down fa-on-right"></i></a> ';
                            r += ' <ul class="dropdown-menu dropdown-light"> ';
                            for (var t in p.values) {
                                if (p.values.hasOwnProperty(t)) {
                                    r += ' <li><a data-edit="fontSize ' + t + '"><font size="' + t + '">' + p.values[t] + "</font></a></li> "
                                }
                            }
                            r += " </ul> ";
                            break;
                        case"createLink":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            r += ' <div class="dropdown-menu dropdown-caret pull-right">                            <div class="input-group">                               <input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" />                               <span class="input-group-btn">                                  <button class="btn btn-sm ' + p.button_class + '" type="button">' + p.button_text + "</button>                              </span>                         </div>                      </div> </div>";
                            break;
                        case"insertImage":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            r += '<div class="dropdown-menu dropdown-caret pull-left"><div class="input-group"><input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" /><span class="input-group-btn"><button class="btn btn-sm ' + p.button_insert_class + '" type="button">' + p.button_insert + '</button></span></div>';
                            if (p.choose_file && "FileReader" in window) {
                                r += '<div class="space-2"></div>                            <div class="center">                               <button class="btn btn-sm ' + p.button_class + ' wysiwyg-choose-file" type="button">' + p.button_text + '</button>                              <input type="file" data-edit="' + p.name + '" />                              </div>'
                            }
                            r += " </div> </div>";
                            break;
                        case"insertVideo":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';

                            r += ' <div class="dropdown-menu dropdown-caret pull-left">                            <div class="input-group">                               <input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" />                               <span class="input-group-btn">                                  <button class="btn btn-sm ' + p.button_class + '" type="button">' + p.button_text + "</button>                              </span><br>                     </div>          <div style='padding: 10px; width: 500px;'>视频链接操作指南<br><b>优酷视频：</b><br>您可以直接将优酷视频播放页的URL（如：http://v.youku.com/v_show/id_XNjgzMjQ2NTM2.html）复制到视频网址栏并点击插入<br><b>腾讯视频：</b><br>您需要手动将腾讯视频的URL，例如http://v.qq.com/boke/page/c/k/c/c0148cvilkc.html，修改为http://v.qq.com/boke/page/c/k/c/c0148cvilkc.html?vid=c0148cvilkc&ptag=1.qzone才可使用。其中“？vid=”后面的字段，即为原链接中“.html”前面的字段“c0148cvilkc”，请将您链接中对应位置的字段填写在“？vid=”之后，再填写“&ptag=1.qzone”即可。</div></div></div>";
                            break;
                        case"insertAudio":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            r += ' <div class="dropdown-menu dropdown-caret pull-left">                            <div class="input-group">                               <input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" />                               <span class="input-group-btn">                                  <button class="btn btn-sm ' + p.button_class + '" type="button">' + p.button_text + "</button>                              </span>                         </div>                      </div> </div>";
                            break;
                        case"insertTel":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            r += ' <div class="dropdown-menu dropdown-caret pull-left">                            <div class="input-group">                               <input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" />                               <span class="input-group-btn">                                  <button class="btn btn-sm ' + p.button_class + '" type="button">' + p.button_text + "</button>                              </span>                         </div>                      </div> </div>";
                            break;
                        case"insertTable":
                            r += ' <div class="inline position-relative"> <a class="btn btn-sm ' + q + ' dropdown-toggle" data-toggle="dropdown" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            r += ' <div class="dropdown-menu dropdown-caret pull-left">                            <div class="input-group">                               <input class="form-control" placeholder="' + p.placeholder + '" type="text" data-edit="' + p.name + '" />                               <span class="input-group-btn">                                  <button class="btn btn-sm ' + p.button_class + '" type="button">' + p.button_text + "</button>                              </span>                         </div>                      </div> </div>";
                            break;
                        case"foreColor":
                        case"backColor":
                            r += ' <select class="hide wysiwyg_colorpicker" title="' + p.title + '"> ';
                            for (var m in p.values) {
                                r += ' <option value="' + p.values[m] + '">' + p.values[m] + "</option> "
                            }
                            r += " </select> ";
                            r += ' <input style="display:none;" disabled class="hide" type="text" data-edit="' + p.name + '" /> ';
                            break;
                        case"viewSource":
                            r += ' <a class="btn btn-sm ' + q + '" data-view="source" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            break;
                        default:
                            r += ' <a class="btn btn-sm ' + q + '" data-edit="' + p.name + '" title="' + p.title + '"><i class="' + p.icon + '"></i></a> ';
                            break
                    }
                }
            }
            r += "</div></div> ";
            if (d.toolbar_place) {
                r = d.toolbar_place.call(this, r)
            } else {
                r = a(this).before(r).prev()
            }
            r.find("a[title]").tooltip({animation: false, container: "body"});
            r.find(".dropdown-menu input:not([type=file])").on("click", function () {
                return false
            }).on("change", function () {
                a(this).closest(".dropdown-menu").siblings(".dropdown-toggle").dropdown("toggle")
            }).on("keydown", function (u) {
                if (u.which == 27) {
                    this.value = "";
                    a(this).change()
                }
            });
            r.find("input[type=file]").prev().on("click", function (u) {
                a(this).next().click()
            });
            r.find(".wysiwyg_colorpicker").each(function () {
                a(this).ace_colorpicker({pull_right: true}).change(function () {
                    a(this).nextAll("input").eq(0).val(this.value).change()
                }).next().find(".btn-colorpicker").tooltip({title: this.title, animation: false, container: "body"})
            });
//            var k;
//            if (d.speech_button && "onwebkitspeechchange" in (k = document.createElement("input"))) {
//                var i = a(this).offset();
//                r.append(k);
//                a(k).attr({type: "text", "data-edit": "inserttext", "x-webkit-speech": ""}).addClass("wysiwyg-speech-input").css({position: "absolute"}).offset({top: i.top, left: i.left + a(this).innerWidth() - 35})
//            } else {
//                k = null
//            }
            var s = a(this);
            var l = false;
            r.find("a[data-view=source]").on("click", function (v) {
                v.preventDefault();
                if (!l) {
                    a("<textarea />").css({width: s.outerWidth(), height: s.outerHeight()}).val(s.html()).insertAfter(s);
                    s.hide();
                    a(this).addClass("active")
                } else {
                    var u = s.next();
                    s.html(u.val()).show();
                    u.remove();
                    a(this).removeClass("active")
                }
                l = !l
            });
            var o = a.extend({}, {activeToolbarClass: "active", toolbarSelector: r}, d.wysiwyg || {});
            a(this).wysiwyg(o)
        });
        return this
    }
})(window.jQuery);
